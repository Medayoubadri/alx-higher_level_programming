=============================
How to Use 3-say_my_name.py
=============================

This module defines the function `say_my_name(first_name, last_name="")`.

Basic Usage
===========

`say_my_name(...)` prints "My name is <first name> <last name>".

::

    >>> say_my_name = __import__('3-say_my_name').say_my_name
    >>> say_my_name("Alice", "Doe")
    My name is Alice Doe

    >>> say_my_name("Alice")
    My name is Alice

Handling Empty Strings
======================

::

    >>> say_my_name("", "Doe")
    My name is  Doe

::

    >>> say_my_name("", "")
    My name is 

::

    >>> say_my_name("")
    My name is 

Type Errors
===========

`first_name` and `last_name` must be strings. If not, a `TypeError` will be raised.

::

    >>> say_my_name(98, "Doe")
    Traceback (most recent call last):
    ...
    TypeError: first_name must be a string

::

    >>> say_my_name(None, "Doe")
    Traceback (most recent call last):
    ...
    TypeError: first_name must be a string

::

    >>> say_my_name("Alice", 98)
    Traceback (most recent call last):
    ...
    TypeError: last_name must be a string

::

    >>> say_my_name("Alice", None)
    Traceback (most recent call last):
    ...
    TypeError: last_name must be a string

Edge Cases
==========

::

    >>> say_my_name(None)
    Traceback (most recent call last):
    ...
    TypeError: first_name must be a string

::

    >>> say_my_name()
    Traceback (most recent call last):
    ...
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'