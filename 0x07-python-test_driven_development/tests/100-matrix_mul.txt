===============================
How to Use 100-matrix_mul.py
===============================

This module defines the function `matrix_mul(m_a, m_b)`.

Basic Usage
===========

`matrix_mul(...)` performs matrix multiplication on two input matrices.

::

    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul

::

    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    [[7, 10], [15, 22]]

::

    >>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
    [[13, 16]]

::

    >>> matrix_mul([[1, 2, 3]], [[3, 4, 5], [5, 6, 8], [9, 10, 11]])
    [[40, 46, 54]]

::

    >>> matrix_mul([[2]], [[7]])
    [[14]]

Type Errors
===========

If the inputs are not proper lists or lists of lists, `TypeError` exceptions are raised.

::

    >>> matrix_mul(9, [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    TypeError: m_a must be a list

::

    >>> matrix_mul([[1, 2], [3, 4]], 9)
    Traceback (most recent call last):
    ...
    TypeError: m_b must be a list

::

    >>> matrix_mul(9, 9)
    Traceback (most recent call last):
    ...
    TypeError: m_a must be a list

::

    >>> matrix_mul([1, 2, 3, 4], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    TypeError: m_a must be a list of lists

::

    >>> matrix_mul([[1, 2], [3, 4]], [1, 2, 3, 4])
    Traceback (most recent call last):
    ...
    TypeError: m_b must be a list of lists

::

    >>> matrix_mul([1, 2, 3, 4], [1, 2, 3, 4])
    Traceback (most recent call last):
    ...
    TypeError: m_a must be a list of lists

Empty Matrices
==============

Empty matrices raise `ValueError` exceptions.

::

    >>> matrix_mul([], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    ValueError: m_a can't be empty

::

    >>> matrix_mul([[]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    ValueError: m_a can't be empty

::

    >>> matrix_mul([[1, 2], [3, 4]], [])
    Traceback (most recent call last):
    ...
    ValueError: m_b can't be empty

::

    >>> matrix_mul([[1, 2], [3, 4]], [[]])
    Traceback (most recent call last):
    ...
    ValueError: m_b can't be empty

::

    >>> matrix_mul([], [])
    Traceback (most recent call last):
    ...
    ValueError: m_a can't be empty

::

    >>> matrix_mul([[]], [[]])
    Traceback (most recent call last):
    ...
    ValueError: m_a can't be empty

Data Type and Size Errors
=========================

If matrix elements are not integers or floats, or rows are not consistent in size, the function raises errors.

::

    >>> matrix_mul([[1, 2], ["Betty", 4]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    TypeError: m_a should contain only integers or floats

::

    >>> matrix_mul([[1, 2], [3, 4]], [[1, "Holberton"], [3, 4]])
    Traceback (most recent call last):
    ...
    TypeError: m_b should contain only integers or floats

::

    >>> matrix_mul([[1, 2], [None, 4]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    TypeError: m_a should contain only integers or floats

::

    >>> matrix_mul([[1, 2], [3]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    TypeError: each row of m_a must be of the same size

::

    >>> matrix_mul([[1, 2], [3, 4]], [[1], [3, 4]])
    Traceback (most recent call last):
    ...
    TypeError: each row of m_b must be of the same size

::

    >>> matrix_mul([[1, 2], [3]], [[1], [3, 4]])
    Traceback (most recent call last):
    ...
    TypeError: each row of m_a must be of the same size

Multiplication Errors
=====================

If the matrices can't be multiplied due to size mismatch, `ValueError` is raised.

::

    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4], [5, 6]])
    Traceback (most recent call last):
    ...
    ValueError: m_a and m_b can't be multiplied

::

    >>> matrix_mul([[1, 2, 3], [3, 4, 5]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    ValueError: m_a and m_b can't be multiplied

Argument Errors
===============

If the function is called without sufficient arguments, a `TypeError` is raised.

::

    >>> matrix_mul()
    Traceback (most recent call last):
    ...
    TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

::

    >>> matrix_mul([[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    TypeError: matrix_mul() missing 1 required positional argument: 'm_b'
