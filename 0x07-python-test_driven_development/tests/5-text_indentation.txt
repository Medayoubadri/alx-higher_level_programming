===============================
How to Use 5-text_indentation.py
===============================

This module defines the function `text_indentation(text)`.

Basic Usage
===========

`text_indentation(...)` adds two new lines after each occurrence of `.`, `?`, or `:` in a text string.

::

    >>> text_indentation = __import__('5-text_indentation').text_indentation

::

    >>> text_indentation("Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quonam modo? Utrum igitur tibi: litteram videor an totas paginas commovere")
    Lorem ipsum dolor sit amet, consectetur adipiscing elit.
    <BLANKLINE>
    Quonam modo?
    <BLANKLINE>
    Utrum igitur tibi:
    <BLANKLINE>
    litteram videor an totas paginas commovere

::

    >>> text_indentation("Lorem:")
    Lorem:
    <BLANKLINE>

::

    >>> text_indentation("Betty")
    Betty

::

    >>> text_indentation(":Betty")
    :
    <BLANKLINE>
    Betty

::

    >>> text_indentation(":")
    :
    <BLANKLINE>

::

    >>> text_indentation(":.")
    :
    <BLANKLINE>
    .
    <BLANKLINE>

Handling Special Cases
======================

When the input is an empty string, or consists of only spaces, the output should be empty.

::

    >>> text_indentation(" ")

::

    >>> text_indentation("")

::

    >>> text_indentation(" .")
    .
    <BLANKLINE>

Type Errors
===========

The `text` argument must be a string. If it's not, a `TypeError` will be raised.

::

    >>> text_indentation(-2)
    Traceback (most recent call last):
    ...
    TypeError: text must be a string

::

    >>> text_indentation(None)
    Traceback (most recent call last):
    ...
    TypeError: text must be a string